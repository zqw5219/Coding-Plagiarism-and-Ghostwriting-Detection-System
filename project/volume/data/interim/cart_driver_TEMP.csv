originalCode,typeIndicator,pureCode,pureComment,pureMacro
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
//  File           : cart_driver.c,0.5,,//  File           : cart_driver.c,
//  Description    : This is the implementation of the standardized IO functions,0.5,,//  Description    : This is the implementation of the standardized IO functions,
//                   for used to access the CART storage system.,0.5,,//                   for used to access the CART storage system.,
//,0.5,,//,
//  Author         : [**YOUR NAME**],0.5,,//  Author         : [**YOUR NAME**],
//  PSU email      : [**YOUR Email**],0.5,,//  PSU email      : [**YOUR Email**],
//,0.5,,//,
,0.0,,,
// Includes,0.5,,// Includes,
#include <stdlib.h>,0.0,#include <stdlib.h>,,
,0.0,,,
// Project Includes,0.5,,// Project Includes,
"#include ""cart_driver.h""",0.0,"#include ""cart_driver.h""",,
"#include ""cart_controller.h""",0.0,"#include ""cart_controller.h""",,
,0.0,,,
//,0.5,,//,
// Implementation,0.5,,// Implementation,
,0.0,,,
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
// Function     : cart_poweron,0.5,,// Function     : cart_poweron,
"// Description  : Startup up the CART interface, initialize filesystem",0.5,,"// Description  : Startup up the CART interface, initialize filesystem",
//,0.5,,//,
// Inputs       : none,0.5,,// Inputs       : none,
"// Outputs      : 0 if successful, -1 if failure",0.5,,"// Outputs      : 0 if successful, -1 if failure",
,0.0,,,
int32_t cart_poweron(void) {,0.0,int32_t cart_poweron(void) {,,
,0.0,,,
// Return successfully,0.5,,// Return successfully,
return(0);,0.0,return(0);,,
},0.0,},,
,0.0,,,
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
// Function     : cart_poweroff,0.5,,// Function     : cart_poweroff,
"// Description  : Shut down the CART interface, close all files",0.5,,"// Description  : Shut down the CART interface, close all files",
//,0.5,,//,
// Inputs       : none,0.5,,// Inputs       : none,
"// Outputs      : 0 if successful, -1 if failure",0.5,,"// Outputs      : 0 if successful, -1 if failure",
,0.0,,,
int32_t cart_poweroff(void) {,0.0,int32_t cart_poweroff(void) {,,
,0.0,,,
// Return successfully,0.5,,// Return successfully,
return(0);,0.0,return(0);,,
},0.0,},,
,0.0,,,
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
// Function     : cart_open,0.5,,// Function     : cart_open,
// Description  : This function opens the file and returns a file handle,0.5,,// Description  : This function opens the file and returns a file handle,
//,0.5,,//,
// Inputs       : path - filename of the file to open,0.5,,// Inputs       : path - filename of the file to open,
"// Outputs      : file handle if successful, -1 if failure",0.5,,"// Outputs      : file handle if successful, -1 if failure",
,0.0,,,
int16_t cart_open(char *path) {,0.0,int16_t cart_open(char *path) {,,
,0.0,,,
// THIS SHOULD RETURN A FILE HANDLE,0.5,,// THIS SHOULD RETURN A FILE HANDLE,
return (0);,0.0,return (0);,,
},0.0,},,
,0.0,,,
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
// Function     : cart_close,0.5,,// Function     : cart_close,
// Description  : This function closes the file,0.5,,// Description  : This function closes the file,
//,0.5,,//,
// Inputs       : fd - the file descriptor,0.5,,// Inputs       : fd - the file descriptor,
"// Outputs      : 0 if successful, -1 if failure",0.5,,"// Outputs      : 0 if successful, -1 if failure",
,0.0,,,
int16_t cart_close(int16_t fd) {,0.0,int16_t cart_close(int16_t fd) {,,
,0.0,,,
// Return successfully,0.5,,// Return successfully,
return (0);,0.0,return (0);,,
},0.0,},,
,0.0,,,
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
// Function     : cart_read,0.5,,// Function     : cart_read,
"// Description  : Reads ""count"" bytes from the file handle ""fh"" into the",0.5,,"// Description  : Reads ""count"" bytes from the file handle ""fh"" into the",
"//                buffer ""buf""",0.5,,"//                buffer ""buf""",
//,0.5,,//,
// Inputs       : fd - filename of the file to read from,0.5,,// Inputs       : fd - filename of the file to read from,
//                buf - pointer to buffer to read into,0.5,,//                buf - pointer to buffer to read into,
//                count - number of bytes to read,0.5,,//                count - number of bytes to read,
"// Outputs      : bytes read if successful, -1 if failure",0.5,,"// Outputs      : bytes read if successful, -1 if failure",
,0.0,,,
"int32_t cart_read(int16_t fd, void *buf, int32_t count) {",0.0,"int32_t cart_read(int16_t fd, void *buf, int32_t count) {",,
,0.0,,,
// Return successfully,0.5,,// Return successfully,
return (count);,0.0,return (count);,,
},0.0,},,
,0.0,,,
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
// Function     : cart_write,0.5,,// Function     : cart_write,
"// Description  : Writes ""count"" bytes to the file handle ""fh"" from the",0.5,,"// Description  : Writes ""count"" bytes to the file handle ""fh"" from the",
"//                buffer  ""buf""",0.5,,"//                buffer  ""buf""",
//,0.5,,//,
// Inputs       : fd - filename of the file to write to,0.5,,// Inputs       : fd - filename of the file to write to,
//                buf - pointer to buffer to write from,0.5,,//                buf - pointer to buffer to write from,
//                count - number of bytes to write,0.5,,//                count - number of bytes to write,
"// Outputs      : bytes written if successful, -1 if failure",0.5,,"// Outputs      : bytes written if successful, -1 if failure",
,0.0,,,
"int32_t cart_write(int16_t fd, void *buf, int32_t count) {",0.0,"int32_t cart_write(int16_t fd, void *buf, int32_t count) {",,
,0.0,,,
// Return successfully,0.5,,// Return successfully,
return (count);,0.0,return (count);,,
},0.0,},,
,0.0,,,
////////////////////////////////////////////////////////////////////////////////,0.5,,////////////////////////////////////////////////////////////////////////////////,
//,0.5,,//,
// Function     : cart_read,0.5,,// Function     : cart_read,
// Description  : Seek to specific point in the file,0.5,,// Description  : Seek to specific point in the file,
//,0.5,,//,
// Inputs       : fd - filename of the file to write to,0.5,,// Inputs       : fd - filename of the file to write to,
//                loc - offfset of file in relation to beginning of file,0.5,,//                loc - offfset of file in relation to beginning of file,
"// Outputs      : 0 if successful, -1 if failure",0.5,,"// Outputs      : 0 if successful, -1 if failure",
,0.0,,,
"int32_t cart_seek(int16_t fd, uint32_t loc) {",0.0,"int32_t cart_seek(int16_t fd, uint32_t loc) {",,
,0.0,,,
// Return successfully,0.5,,// Return successfully,
return (0);,0.0,return (0);,,
},0.0,},,
